import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)
VIDEO_LIST = {
    "bobozhirvore1": "–±–æ–±–æ–∂–∏—Ä –≤–æ—Ä–µ 1 —Å–µ—Ä–∏—è",
    "bobozhirvorehd": "–±–æ–±–æ–∂–∏—Ä –≤–æ—Ä–µ HD",
}
PHOTO_LIST = {
    "kopai": "–ö–û–ü–ê–ô",
}
@dp.message_handler(commands=["list"])
async def list_cmd(message: types.Message):
    text = "üé¨ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∏–¥–µ–æ:\n"
    for key, desc in VIDEO_LIST.items():
        text += f"{key} - {desc}\n"
    
    text += "\nüñº –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ç–æ:\n"
    for key, desc in PHOTO_LIST.items():
        text += f"{key} - {desc}\n"

    await message.reply(text)
    
@dp.message_handler(commands=["photo"])
async def send_photo(message: types.Message):
    args = message.get_args()
    if not args:
        await message.reply("üìù –ò—Å–ø–æ–ª—å–∑—É–π: /photo <–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è>")
        return

    filename = f"photos/{args}.jpg"  # –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
    if not os.path.exists(filename):
        await message.reply("‚ùå –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return

    await message.reply_photo(open(filename, "rb"))
@dp.message_handler(commands=["start"])
async def start_cmd(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç —Ç—ã –≤ –∞—Ä—Ö–∏–≤–µ –¥–∞–Ω–∏ 2010 /list - –ª–∏—Å—Ç –≤—Å–µ—Ö –≤–∏–¥–µ–æ —Ç–∞ —Ñ–æ—Ç–æ /video - –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ /photo - –Ω–∞–π—Ç–∏ —Ñ–æ—Ç–æ")
# --- –ö–æ–º–∞–Ω–¥–∞ /video ---
@dp.message_handler(commands=["video"])
async def send_video(message: types.Message):
    args = message.get_args()
    if not args:
        await message.reply("üìù –ò—Å–ø–æ–ª—å–∑—É–π: /video <–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è>")
        return

    filename = f"videos/{args}.mp4"
    if not os.path.exists(filename):
        await message.reply("‚ùå –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return

    await message.reply_video(open(filename, "rb"))

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
